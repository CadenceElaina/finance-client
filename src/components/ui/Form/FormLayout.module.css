/* src/components/ui/Form/FormLayout.module.css */

.formGrid {
    display: grid;
    /* On wider screens, we'll maintain two columns. */
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    /* Keep this for overall grid structure */
    gap: var(--space-md);
    /* Consistent gap between grid items */
    padding: var(--space-sm) var(--space-sm);
    /* Padding around the grid */

    /* Consistent max-width for the overall form */
    margin: var(--space-lg) auto;
    /* Top/bottom margin, centered horizontally */
    box-sizing: border-box;
    background: var(--surface-light);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-md);
}

/* Default styling for form groups (label-input pairs) */
.formGroup {
    display: flex;
    flex-direction: row;
    /* Labels and inputs in a row */
    align-items: center;
    /* Vertically align label and input */
    gap: var(--space-md);
    /* Consistent gap between label and input */
    width: 100%;
    /* Take full width of its grid cell */
}

.formGroup label {
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    margin-bottom: 0;
    text-align: right;
    /* Right-align label to push it closer to the input */
    min-width: 140px;
    /* Adjusted min-width for labels */
    max-width: 180px;
    /* Adjusted max-width for labels */
    flex-shrink: 0;
    flex-grow: 0;
}

.formGroup input,
.formGroup select {
    width: 220px;
    /* Fixed width for inputs */
    box-sizing: border-box;
    text-align: left;
    /* Default text alignment */
}

/* Specific styling for the calculated read-only input */
.formGroup input[type="text"][readOnly],
.formGroup input[type="number"][readOnly] {
    text-align: right;
    /* Right-align for currency/calculated numbers */
    font-weight: var(--font-weight-bold);
    color: var(--text-primary);
}


/* Input and Select General Styling (moved outside .formGroup for general application) */
input,
select {
    padding: var(--space-xxs) var(--space-xs);
    font-size: var(--font-size-sm);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-light);
    background: var(--background-light);
    color: var(--text-primary);
    box-sizing: border-box;
}

/* Read-only / disabled input styling (general) */
input[type="number"]:read-only,
input[type="text"]:read-only,
select:read-only,
input[type="number"]:disabled,
input[type="text"]:disabled,
select:disabled {
    background: var(--surface-dark);
    color: var(--text-tertiary);
    border-color: var(--border-dark);
    cursor: not-allowed;
    opacity: 0.9;
}


/* --- Radio Group Styles for Income Type Selection --- */

.radioRowTop {
    display: flex;
    /* Changed to flexbox */
    flex-direction: row;
    /* Arranges label and radio group horizontally */
    align-items: center;
    /* Vertically center items */
    justify-content: center;
    /* Horizontally center the whole block */
    gap: var(--space-lg);
    /* Space between 'Income Type:' label and the radio buttons */
    margin-bottom: var(--space-md);
    /* Space below this entire radio section */
    grid-column: 1 / -1;
    /* Ensure it spans all columns of the formGrid */
    padding-top: var(--space-sm);
    width: 100%;
    /* Ensure it takes full width to allow proper centering */
}

.radioRowLabel {
    font-size: var(--font-size-base);
    color: var(--text-secondary);
    margin-bottom: 0;
    /* No bottom margin, as it's row-flexed */
    text-align: right;
    /* Align label text to the right for proximity to radios */
    font-weight: var(--font-weight-medium);
    flex-shrink: 0;
    /* Prevent label from shrinking */
}

.radioRowGroup {
    display: flex;
    flex-direction: row;
    /* Ensure radio options are in a row */
    gap: var(--space-lg);
    /* Space between "Hourly" and "Salary" options */
    align-items: center;
    justify-content: flex-start;
    /* Align radios to the start within their group */
    flex-wrap: wrap;
    /* Allow wrapping for small screens */
}

.radioRowGroup label {
    display: flex;
    align-items: center;
    gap: var(--space-xxs);
    font-size: var(--font-size-base);
    color: var(--text-secondary);
    margin: 0;
    cursor: pointer;
}

/* Media Queries for responsiveness */
@media (max-width: 900px) {
    .formGrid {
        grid-template-columns: 1fr 1fr;
        max-width: 98vw;
    }
}

@media (max-width: 768px) {
    .formGrid {
        grid-template-columns: 1fr;
        max-width: 98vw;
        padding: var(--space-md);
    }

    /* Stack labels and inputs vertically on smaller screens */
    .formGroup {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--space-xxs);
    }

    .formGroup label {
        text-align: left;
        width: 100%;
        min-width: unset;
        max-width: unset;
    }

    .formGroup input,
    .formGroup select {
        width: 100%;
        max-width: unset;
    }

    /* Adjust radioRowTop for single column layout on smaller screens */
    .radioRowTop {
        flex-direction: column;
        /* Stack label and radio options */
        gap: var(--space-sm);
        /* Adjust gap when stacked */
    }

    .radioRowLabel {
        text-align: center;
        /* Center label when stacked */
    }

    .radioRowGroup {
        justify-content: center;
        /* Center the radio options when stacked */
    }
}

/* Further reduce space for very small screens if needed */
@media (max-width: 480px) {
    .formGrid {
        gap: var(--space-sm);
        /* Reduce overall grid gap */
    }

    .formGroup {
        gap: var(--space-xxs);
        /* Smaller gap for stacked form groups */
    }

    .radioRowTop {
        gap: var(--space-sm);
    }

    .radioRowGroup {
        gap: var(--space-sm);
        /* Smaller gap between radio options */
    }
}
