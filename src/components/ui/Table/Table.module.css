/* src/components/ui/Table/Table.module.css */

.tableContainer {
    width: 100%;
    overflow-x: auto;
    /* Allows horizontal scrolling for large tables on small screens */
}

.table {
    width: 100%;
    border-collapse: collapse;
    min-width: 500px;
    margin: 0 auto;
    font-size: var(--font-size-table-compact);
    background: var(--surface-light);
    border: 1px solid var(--border-light);
}

.table th,
.table td {
    border: none;
      padding: var(--space-xxs) var(--space-xs);
    text-align: left;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-light);
    vertical-align: middle;
    font-size: inherit;
    /* Inherit from .table or .compactTable */
}

.table th {
    background: var(--surface-dark);
    color: var(--text-primary);
    font-weight: bold;
    position: sticky;
    top: 0;
    z-index: 1;
    border-bottom: 1px solid var(--border-light);
    text-align: left;
    padding: var(--space-xs) var(--space-sm);
    white-space: nowrap;
    /* Prevents header text from wrapping */
}

.table tr:nth-child(even) {
    background: var(--table-row-even-bg);
}

.table tr:hover {
    background: var(--table-row-hover-bg);
}

.table tr {
    fill: var(--white);
    pointer-events: auto;
    font-weight: 400;
    text-shadow: none;
    cursor: default;
    transition: background 0.15s;
}

/* Input/Select elements within table cells for editing */
.tableInput {
    width: 100%;
    padding: var(--space-xxs) var(--space-xxs);
    border: 1px solid var(--border-light);
    border-radius: var(--border-radius-sm);
    background-color: var(--background-light);
    color: var(--text-primary);
    font-size: var(--font-size-xxs);
    transition: all var(--transition-speed-fast) var(--transition-ease);
    height: calc(var(--font-size-xxs) + (var(--space-xxs) * 2) + 2px);
    /* Ensures consistent height */
    box-sizing: border-box;
    max-width: none;
}

.tableSelect {
    /* Manually applying baseSelect styles due to build issue with composes from external file */
    min-width: 110px; /* Base from baseSelect */
    font-size: var(--font-size-xxs); /* Base from baseSelect */
    height: 28px; /* Base from baseSelect */
    border-radius: var(--border-radius-sm); /* Base from baseSelect */
    border: 1px solid var(--border-light); /* Base from baseSelect */
    background: var(--background-light); /* Base from baseSelect */
    color: var(--text-primary); /* Base from baseSelect */
    cursor: pointer; /* Base from baseSelect */
    appearance: none; /* Base from baseSelect */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%238A8FA3'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E"); /* Base from baseSelect */
    background-repeat: no-repeat; /* Base from baseSelect */
    transition: all var(--transition-speed-fast) var(--transition-ease); /* Base from baseSelect */
    box-sizing: border-box; /* Base from baseSelect */

    /* Specific overrides for tableSelect */
    width: 100%; /* Ensure it takes full width in table cell */
   
    padding: var(--space-xxs) var(--space-xxs); /* Explicit padding to match tableInput */
    min-width: unset; /* Remove min-width from baseSelect to allow it to shrink */
   
}

.tableInput:focus,
.tableSelect:focus {
    outline: none;
    box-shadow: var(--focus-ring);
    border-color: var(--color-primary);
}

/* Buttons within table cells */
.removeButton,
.addButton {
    padding: var(--space-xxs) var(--space-xs);
    font-size: var(--font-size-xxs);
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    transition: background-color 0.2s ease;
    white-space: nowrap;
    /* Prevents button text from wrapping */
}

.removeButton {
    background-color: var(--status-danger);
    color: var(--text-light);
    border: 1px solid var(--status-danger);
}

.removeButton:hover {
    background-color: var(--status-danger-dark);
}

.addButton {
    background-color: var(--color-primary);
    color: var(--text-on-primary);
    border: 1px solid var(--color-primary);
}

.addButton:hover {
    background-color: var(--color-primary-light);
}

/* Styles for a Section containing a table (e.g., AccountsTable, ExpensesTable) */
.tableSection {
    background-color: var(--surface-light);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    width: 100%;
    max-width: none;
/* border: 1px solid var(--border-light); */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
}

/* --- SMALL APP MODE OVERRIDES --- */
.smallApp {

}

.smallApp .table {

}

.smallApp .table th,
.smallApp .table td {

}

.smallApp .tableInput,
.smallApp .tableSelect,
.smallApp .removeButton,
.smallApp .addButton {

}

/* --- Filter Row Styles (Moved from accounts.module.css) --- */
/* These styles are for the filter mechanism, which is used in Accounts and now Expenses.*/
.filterRow {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    margin-bottom: 0;
    /* Remove if SectionHeader adds internal margin */
    justify-content: flex-end;
    /* Aligns filters to the right */
    flex-wrap: wrap;
    /* Allow filters to wrap on very small screens */
}

.filterLabel {
    font-size: var(--font-size-xxs);
    color: var(--text-secondary);
    font-weight: 500;
    white-space: nowrap;
    /* Prevent label from wrapping */
}

/* This .filterSelect is now redundant as it's defined in section.module.css, but keeping here as a fallback */
.filterSelect {
    min-width: 110px;
    font-size: var(--font-size-xxs);
    padding: var(--space-xxs) var(--space-xs);
    height: 28px;
    /* Standard height for select inputs */
    border-radius: var(--border-radius-sm);
    border: 1px solid var(--border-light);
    background: var(--background-light);
    color: var(--text-primary);
    cursor: pointer;
    appearance: none;
    /* Removes default browser select arrow */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%238A8FA3'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 8px center;
    background-size: 18px;
    padding-right: 26px;
    /* Space for custom arrow */
}

.filterSelect:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: var(--focus-ring);
}

/* --- Table Header Title (used in SectionHeader) --- */
.tableHeaderTitle {
    /* Renamed from accountsHeaderTitle to be generic */
    font-size: var(--font-size-base);
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
    flex: 1;
    text-align: left;
    /* Aligned left for standard section headers */
    /* Accounts had text-align: center; for accountsHeaderTitle, this makes it left for generic */
}

.noResults {
    text-align: center;
    color: var(--text-secondary);
    padding: var(--space-md);
    font-size: var(--font-size-sm);
}

/* Align Right Class (New) */
.alignRight {
    text-align: right !important;
}

/* Always show pointer for enabled selects */
/* These rules are now largely handled by section.module.css baseSelect */
/* but explicitly keeping them here for table context is fine. */
select,
.filterSelect,
.tableSelect {
    cursor: pointer;
}

/* Only show not-allowed for disabled selects */
select:disabled,
.filterSelect:disabled,
.tableSelect:disabled {
    cursor: not-allowed;
}

:global(.largeApp) .table {
  font-size: var(--font-size-base);
}
:global(.largeApp) .table th,
:global(.largeApp) .table td {
  padding: var(--space-sm) var(--space-sm);
  font-size: var(--font-size-md);
}
:global(.largeApp) .tableInput,
:global(.largeApp) .tableSelect {
  font-size: var(--font-size-base);
  padding: var(--space-sm) var(--space-sm);
  height: calc(var(--font-size-base) + (var(--space-sm) * 2) + 2px); /* Adjust height */
  background-position: right 12px center; /* Adjust arrow position */
  background-size: 20px; /* Adjust arrow size */
  padding-right: 32px; /* Adjust padding for arrow */
}

/* Button.module.css */
:global(.largeApp) .button {
  font-size: var(--font-size-base);
  min-width: 160px;
  padding: var(--space-sm) var(--space-sm);
}

/* Section.module.css */
:global(.largeApp) .section {
  font-size: var(--font-size-base);
  padding: var(--space-sm);
}
:global(.largeApp) .sectionHeader {
  font-size: var(--font-size-md);
  padding: var(--space-sm) var(--space-sm);
}
:global(.largeApp) .sectionContent {
  padding: var(--space-sm);
}