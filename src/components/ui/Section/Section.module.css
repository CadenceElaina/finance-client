/* src/components/ui/Section/Section.module.css */

.section {
    background: var(--surface-light);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-md);
    padding: 0 var(--section-padding);
    /* This padding might be an issue if we want internal padding per section */
    /*     margin-bottom: var(--space-md); */
    width: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
}

.sectionHeader {
    /* This is a wrapper for the actual header content (title or SectionHeader component) */
    font-size: var(--section-header-font-size);
    font-weight: 600;
    /*    margin-bottom: var(--space-sm); */
    text-align: left;
    color: var(--text-primary);
    padding-left: var(--space-xs);
    /* This padding is on the sectionHeader div, not the content */
}

/* These styles are used by SectionHeader.jsx, which is good. */
.sectionHeaderRow {
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
    margin-bottom: var(--space-xs);
    padding: 0 var(--space-xs);
}

.sectionHeaderLeft,
.sectionHeaderRight {
    flex: 1 1 0;
    display: flex;
    align-items: center;
    min-width: 0;
}

.sectionHeaderLeft {
    justify-content: flex-start;
}

.sectionHeaderRight {
    justify-content: flex-end;
}

.sectionHeaderTitle {
    flex: 1 1 0;
    text-align: center;
    margin: 0;
    font-size: var(--section-header-font-size);
    font-weight: 600;
    color: var(--text-secondary);
    min-width: 0;
}

.sectionContent {
    width: 100%;
    padding: 0;
    /* This means internal padding must be handled by the children directly */
}

.twoColumn {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-md);
    width: 100%;
}

.oneColumn {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    width: 100%;
}

.column {
    width: 100%;
    min-width: 0;
}