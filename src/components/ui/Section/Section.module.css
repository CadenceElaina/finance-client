/* src/components/ui/Section/section.module.css */

.section {
    background-color: var(--surface-light);
    box-shadow: var(--shadow-sm);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-light);
    display: flex; 
    flex-direction: column; /* Stack header and content */
    height: 100%; /* Important for TwoColumnLayout children */
}

.sectionHeader {
    /* This style is for the div wrapping the header, not the h3 itself */
    font-size: var(--font-size-base); /* Base font size, h3 inside will override */
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-subtle);
    padding-bottom: var(--space-xxs);
    padding-top: var(--space-xxs); /* Added top padding */
    padding-left: var(--space-sm); /* Added left/right padding */
    padding-right: var(--space-sm);
    display: flex; /* Make sectionHeader a flex container */
    align-items: center; /* Vertically align items in header */
    justify-content: space-between; /* Space out title and right content */
    gap: var(--space-sm); /* Gap between title and right content */
}

.sectionHeader h3 {
    margin: 0; /* Reset margin from browser default */
    flex: 1; /* Allow h3 to take available space */
    text-align: left; /* Default text alignment for section titles */
}

.sectionContent {
    flex-grow: 1;
    overflow: auto;
    padding-left: var(--space-xs);
    padding-right: var(--space-xs);
    padding-top: var(--space-xs);
    padding-bottom: var(--space-xs);
}

/* --- TwoColumnLayout specific styles --- */

.twoColumn {
    display: flex;
    flex-direction: row;
    gap: var(--space-xxs);
    width: 100%;
    padding: var(--space-xs);
    box-sizing: border-box;
    align-items: flex-start;
    overflow-x: hidden;
    height: 100%; /* Important for vertical distribution */
}

.oneColumn { /* For smallApp mode, stack columns */
    display: flex;
    flex-direction: column;
    gap: var(--space-xxs);
    width: 100%;
    padding: var(--space-xxs);
    box-sizing: border-box;
    align-items: flex-start;
    overflow-x: hidden;
    height: 100%;
}


.column {
    min-width: 0;
    display: flex;
    flex-direction: column;
    flex: 1 1 0;
    height: 100%; /* Columns should take full height in flex parent */
    gap: var(--space-xxs); /* Gap between sections within a column */
}

.columns45_55 .column:first-child {
    flex: 0 1 44%;
    max-width: 44%;
}
.columns45_55 .column:last-child {
    flex: 0 1 55%;
    max-width: 55%;
}

.columns66_34 .column:first-child {
    flex: 0 1 65%;
    max-width: 65%;
}
.columns66_34 .column:last-child {
    flex: 0 1 33%;
    max-width: 33%;
}

.columns70_30 .column:first-child {
    flex: 0 1 69%;
    max-width: 69%;
}
.columns70_30 .column:last-child {
    flex: 0 1 30%;
    max-width: 30%;
}

/* --- Common Chart-related Styles (Moved from accounts.module.css) --- */
/* These styles are general for charts and should be here. */


.chartHeader {
    text-align: center;
    margin-bottom: var(--space-xxs);
    font-size: var(--font-size-base); /* Default size */
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
}


.noChartData {
    color: var(--text-secondary);
    text-align: center;
    padding: var(--space-xs);
    font-size: var(--font-size-xs);
}

.chartLabelText {
    font-size: var(--font-size-chart-label, var(--font-size-xxs)); /* Fallback for chart label text */
    fill: var(--chart-label-text, var(--text-primary));
    pointer-events: none;
}

/* --- Small App overrides for Charts --- */
.smallApp .chartHeader {
    font-size: var(--font-size-xxs); /* Smaller header for charts */
}

/* --- Section Header Row Specifics (from SectionHeader component) --- */
.sectionHeaderRow {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-sm);
    width: 100%;
    padding: var(--space-xs) var(--space-sm); /* Padding for the entire header row */
    border-bottom: 1px solid var(--border-subtle);
}
.sectionHeaderLeft {
    /* Style for left side content in header */
}
.sectionHeaderTitle {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
    margin: 0;
    flex: 1;
    text-align: left;
}
.sectionHeaderRight {
    font-size: var(--font-size-xs);
    display: flex;
    align-items: center;
    gap: var(--space-xs);
}

.filterColumn {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: var(--space-xs);
}

/* --- Base Select Style --- */
/* This will serve as a common base for all general select elements except budget select which has 2 selects */
.baseSelect,
select:not(.budgetSelect) { /* Apply to all select elements unless they have .budgetSelect */
    min-width: 110px; /* Consistent minimum width */
    font-size: var(--font-size-xxs); /* Default small font size */
    padding: var(--space-xxs) var(--space-xs);
    height: 28px; /* Standard height for select inputs */
    border-radius: var(--border-radius-sm);
    border: 1px solid var(--border-light);
    background: var(--background-light);
    color: var(--text-primary);
    cursor: pointer;
    appearance: none; /* Removes default browser select arrow */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%238A8FA3'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 8px center;
    background-size: 18px;
    padding-right: 26px; /* Space for custom arrow */
    transition: all var(--transition-speed-fast) var(--transition-ease);
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

.baseSelect:focus,
select:not(.budgetSelect):focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px rgba(var(--color-primary-rgb), 0.2); /* Subtle focus ring */
}

/* --- Filter Select (Leveraging Base Select) --- */
.filterSelect {
    composes: baseSelect; /* Use composes to inherit styles if using CSS Modules */
}

.filterLabel {
    font-size: var(--font-size-xxs); /* Smaller font for labels next to selects */
    color: var(--text-secondary);
    margin-right: var(--space-xxs); /* Small space between label and select */
    white-space: nowrap; /* Prevent label from wrapping */
}


:global(.largeApp) .section {
  font-size: var(--font-size-md);
  padding: var(--space-sm);
}
:global(.largeApp) .sectionHeader {
  font-size: var(--font-size-md);
  padding: var(--space-sm) var(--space-sm);
}
:global(.largeApp) .sectionContent {
  padding: var(--space-sm);
}

/* --- Large App Mode Scaling for Selects --- */
/* Apply to the base select and specific select classes */
:global(.largeApp) .baseSelect,
:global(.largeApp) select:not(.budgetSelect),
:global(.largeApp) .filterSelect { /* Exclude .tableSelect here, it's handled in its own module */
  font-size: var(--font-size-base); /* Scale up font size */
  padding: var(--space-sm) var(--space-sm); /* Increase padding */
  height: calc(var(--font-size-base) + (var(--space-sm) * 2) + 2px); /* Adjust height */
  min-width: 140px; /* Slightly wider for large app */
  background-position: right 12px center; /* Adjust arrow position */
  background-size: 20px; /* Adjust arrow size */
  padding-right: 32px; /* Adjust padding for arrow */
}

/* Accounts.module.css */
.portfoliosChartsRow {
    display: flex;
    flex-direction: row;
    gap: var(--space-sm);
    width: 100%; /* was 99% */
    margin: 0;   /* remove margin */
    padding: 0;  /* remove padding */
}

select,
.filterSelect,
.tableSelect {
    cursor: pointer;
}

