/* src/components/ui/Section/section.module.css */

.section {
    background-color: var(--surface-light);
    box-shadow: var(--shadow-sm);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-light);
    display: flex; /* Make section a flex container */
    flex-direction: column; /* Stack header and content */
    height: 100%; /* Important for TwoColumnLayout children */
}

.sectionHeader {
    /* This style is for the div wrapping the header, not the h3 itself */
    font-size: var(--font-size-base); /* Base font size, h3 inside will override */
    font-weight: 600;
    color: var(--text-primary);
    border-bottom: 1px solid var(--border-subtle);
    padding-bottom: var(--space-xxs);
    padding-top: var(--space-xxs); /* Added top padding */
    padding-left: var(--space-sm); /* Added left/right padding */
    padding-right: var(--space-sm);
    display: flex; /* Make sectionHeader a flex container */
    align-items: center; /* Vertically align items in header */
    justify-content: space-between; /* Space out title and right content */
    gap: var(--space-sm); /* Gap between title and right content */
}

.sectionHeader h3 {
    margin: 0; /* Reset margin from browser default */
    flex: 1; /* Allow h3 to take available space */
    text-align: left; /* Default text alignment for section titles */
}

.sectionContent {
    flex-grow: 1;
    overflow: auto; /* Allow content to scroll if it overflows */
    padding: var(--space-xs); /* Default padding for section content */
}

/* --- TwoColumnLayout specific styles --- */

.twoColumn {
    display: flex;
    flex-direction: row;
    gap: var(--space-xxs);
    width: 100%;
    padding: var(--space-xxs);
    box-sizing: border-box;
    align-items: flex-start;
    overflow-x: hidden;
    height: 100%; /* Important for vertical distribution */
}

.oneColumn { /* For smallApp mode, stack columns */
    display: flex;
    flex-direction: column;
    gap: var(--space-xxs);
    width: 100%;
    padding: var(--space-xxs);
    box-sizing: border-box;
    align-items: flex-start;
    overflow-x: hidden;
    height: 100%;
}


.column {
    min-width: 0;
    display: flex;
    flex-direction: column;
    flex: 1 1 0;
    height: 100%; /* Columns should take full height in flex parent */
    gap: var(--space-xxs); /* Gap between sections within a column */
}

.columns45_55 .column:first-child {
    flex: 0 1 45%;
    max-width: 45%;
}
.columns45_55 .column:last-child {
    flex: 0 1 55%;
    max-width: 55%;
}

.columns66_34 .column:first-child {
    flex: 0 1 66%;
    max-width: 66%;
}
.columns66_34 .column:last-child {
    flex: 0 1 34%;
    max-width: 34%;
}

.columns70_30 .column:first-child {
    flex: 0 1 70%;
    max-width: 70%;
}
.columns70_30 .column:last-child {
    flex: 0 1 30%;
    max-width: 30%;
}

/* --- Common Chart-related Styles (Moved from accounts.module.css) --- */
/* These styles are general for charts and should be here. */

.chartSectionNoBorder {
    border: none !important; /* To remove default section border for charts */
    box-shadow: none !important; /* To remove default section shadow for charts */
    padding: 0 !important; /* To remove section internal padding */
    background-color: transparent !important; /* Ensure background is transparent */
    height: unset !important; /* Allow height to be determined by content */
}

.chartHeader {
    text-align: center;
    margin-bottom: var(--space-xxs);
    font-size: var(--font-size-base); /* Default size */
    font-weight: 600;
    color: var(--text-primary);
}

.chartContainerCompact {
    padding: var(--space-xxs);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%; /* Takes full height in a flex column */
    flex-grow: 1; /* Allows chart container to grow */
}

.noChartData {
    color: var(--text-secondary);
    text-align: center;
    padding: var(--space-xs);
    font-size: var(--font-size-xs);
}

.chartLabelText {
    font-size: var(--font-size-chart-label, var(--font-size-xxs)); /* Fallback for chart label text */
    fill: var(--chart-label-text, var(--text-primary));
    pointer-events: none;
}

/* --- Small App overrides for Charts --- */
.smallApp .chartHeader {
    font-size: var(--font-size-xxs); /* Smaller header for charts */
}

/* --- Section Header Row Specifics (from SectionHeader component) --- */
.sectionHeaderRow {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-sm);
    width: 100%;
    padding: var(--space-xs) var(--space-sm); /* Padding for the entire header row */
    border-bottom: 1px solid var(--border-subtle);
}
.sectionHeaderLeft {
    /* Style for left side content in header */
}
.sectionHeaderTitle {
    font-size: var(--font-size-base);
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
    flex: 1;
    text-align: left;
}
.sectionHeaderRight {
    font-size: var(--font-size-xs);
    display: flex;
    align-items: center;
    gap: var(--space-xs);
}

.filterColumn {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: var(--space-xs);
}

/* Always show pointer for enabled selects */
select,
.filterSelect,
.tableSelect {
    cursor: pointer;
}

/* Only show not-allowed for disabled selects */
select:disabled,
.filterSelect:disabled,
.tableSelect:disabled {
    cursor: not-allowed;
}

:global(.largeApp) .section {
  font-size: var(--font-size-md);
  padding: var(--space-sm);
}
:global(.largeApp) .sectionHeader {
  font-size: var(--font-size-md);
  padding: var(--space-sm) var(--space-sm);
}
:global(.largeApp) .sectionContent {
  padding: var(--space-sm);
}

/* Use variables for large app mode scaling */
/* Table.module.css */
:global(.largeApp) .table {
  font-size: var(--font-size-md);
}
:global(.largeApp) .table th,
:global(.largeApp) .table td {
  padding: var(--space-sm) var(--space-sm);
  font-size: var(--font-size-md);
}
:global(.largeApp) .tableInput,
:global(.largeApp) .tableSelect {
  font-size: var(--font-size-base);
  padding: var(--space-sm) var(--space-sm);
}
:global(.largeApp) .removeButton,
:global(.largeApp) .addButton {
  font-size: var(--font-size-base);
  padding: var(--space-sm) var(--space-sm);
}

/* Button.module.css */
:global(.largeApp) .button {
  font-size: var(--font-size-base);

  padding: var(--space-sm) var(--space-sm);
}